[{"content":"前言 #拿出你的鍵盤吧！ #說明 #小結 #","date":"12 5月 2025","permalink":"/posts/n8n/n8n-basic2/","section":"Posts","summary":"","title":"N8n Basic2"},{"content":"","date":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":null,"permalink":"/","section":"沒有轉生就成為工程師了|自學轉職工程師的技術與成長筆記","summary":"","title":"沒有轉生就成為工程師了|自學轉職工程師的技術與成長筆記"},{"content":"","date":null,"permalink":"/tags/n8n/","section":"Tags","summary":"","title":"N8n"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":null,"permalink":"/topics/","section":"Topics","summary":"","title":"Topics"},{"content":" flowchart TD c1--\u003ea2 前言 #n8n 作為一套自動化管理工具，目前在 GitHub 上有超過 4 萬顆星星，十分火熱，而肥宅我也想朝聖，於是有了這些筆記的出現。這一系列的文章會是提供給應用程式開發已有基礎的朋友們，讓你們能夠快速上手 n8n 的使用，並且能夠在日常生活中使用 n8n 來幫助你們的工作。\n使用工具 #在這邊文章中，我們會使用這些工具在本地安裝並且設定 n8n。\n容器管理工具：Docker + Docker Compose，MacOS 上也可以使用 OrbStack ngrok：ngrok 是一個可以將本地端的服務公開到網路上的工具，這邊我們會使用 ngrok 來讓 n8n 的 webhook 可以被外部存取。 準備你的編輯器，可用 VSCode 或者是 JetBrains 的 IDE 拿出你的鍵盤吧！ #註冊 ngrok 帳號 #設置 Docker 環境 # 下載 Docker Desktop，並且安裝 建立一個空白專案資料夾並放入下列檔案 # n8n Configuration N8N_PORT=5678 N8N_BASIC_AUTH_USER=admin N8N_BASIC_AUTH_PASSWORD=12345678 # ngrok Configuration NGROK_AUTHTOKEN=1W3CqoImkaCeJFdRGYfxkUZrt7T_ukJjQa7VtzZDLdT33h6P NGROK_URL=https://golden-assured-pigeon.ngrok-free.app services: n8n: image: n8nio/n8n:latest restart: unless-stopped ports: - \u0026#34;${N8N_PORT:-5678}:5678\u0026#34; environment: # Authentication - N8N_BASIC_AUTH_ACTIVE=true - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin} - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD:-change_this_password} - N8N_RUNNERS_ENABLED=true # Host configuration - N8N_HOST=${N8N_HOST:-localhost} - N8N_PORT=${N8N_PORT:-5678} - WEBHOOK_URL=${NGROK_STATIC_URL:-http://localhost:5678} # Execution settings - GENERIC_TIMEZONE=Asia/Taipei - TZ=Asia/Taipei volumes: - n8n_data:/home/node/.n8n depends_on: - ngrok networks: - n8n_network ngrok: image: ngrok/ngrok:3-alpine restart: unless-stopped ports: - 4040:4040 command: - \u0026#34;http\u0026#34; - \u0026#34;http://host.docker.internal:5678\u0026#34; - \u0026#34;--url\u0026#34; - \u0026#34;${NGROK_STATIC_URL}\u0026#34; environment: - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN} networks: - n8n_network networks: n8n_network: name: n8n_network driver: bridge volumes: n8n_data: name: n8n_public_data 說明 #小結 #{{ .Site.Config.Services.Disqus.Shortname }}\n","date":"9 5月 2025","permalink":"/posts/n8n/n8n-installation/","section":"Posts","summary":"","title":"在本地環境安裝 n8n"},{"content":"","date":null,"permalink":"/tags/%E8%87%AA%E5%8B%95%E5%8C%96/","section":"Tags","summary":"","title":"自動化"},{"content":"","date":null,"permalink":"/topics/%E6%88%91%E5%9C%A8%E7%8F%BE%E5%AF%A6%E7%94%9F%E6%B4%BB%E4%B8%AD%E7%94%A8-n8n-%E9%96%8B%E5%A4%96%E6%8E%9B%E9%81%8E%E4%B8%8A%E5%B9%B3%E5%87%A1%E7%94%9F%E6%B4%BB/","section":"Topics","summary":"","title":"我在現實生活中用 N8n 開外掛過上平凡生活"},{"content":"","date":"18 4月 2025","permalink":"/posts/%E6%B8%AC%E8%A9%A6/","section":"Posts","summary":"","title":"測試"},{"content":"","date":"18 4月 2025","permalink":"/about/","section":"沒有轉生就成為工程師了|自學轉職工程師的技術與成長筆記","summary":"","title":"About"},{"content":"","date":null,"permalink":"/tags/golang/","section":"Tags","summary":"","title":"Golang"},{"content":"前言 #各位勇者，歡迎降臨 Golang 新手村！你是不是渴望著操控程式之力？這裡就是你的起點，讓我們一同修煉 Go 能力吧！\n我們的第一個任務是要來了解 Golang 的基本語法，認識基本的語法結構。 這個系列的文章將會引用官網中 \u0026laquo;A Tour of Go\u0026raquo; 一系列的範例程式。\n出處： A Tour of Go\u0026quot; title=\u0026ldquo;A Tour of Go 新手村使用說明 # 所有的教學任務會以一個新手的觀點來撰寫，從最基本的語法開始介紹，並且附上範例程式碼。\n範例程式碼大部分官網取得並僅止於引用，可從連結進入原始網頁中，按下Run按鈕測試。 ˇ範例程式碼若有附註，會使用下列幾種區塊來說明：\n用於提供一些建議或備註的區塊，讓使用者可以更加了解程式碼的使用方式或注意事項。 用於告知有可能會引發錯誤或需要特別注意的區塊，讓使用者可以更加小心地使用。 用於提供一些問題或疑問的區塊，讓使用者可以思考或討論。 拿出你的鍵盤吧！ #冒險者們，你不會這樣就慌張了吧？作為一位初心者，首先要做的是保持冷靜，先不要慌。\n想像著我們轉生前就讀國小一年級時，看到課本上一大坨文字難免會慌張。而這時老師帶著我們一個字一個字讀完，並且講解文字的意思，我們就是用這樣的方式開始熟悉文字。\n經過約十來年的訓練，我們才能夠毫不費力地閱讀文章。閱讀程式語言也是需要透過密集的練習才能夠熟悉的。\n這是第一個任務，讓我們來看看這段程式碼：\npackage main import ( \u0026#34;fmt\u0026#34; \u0026#34;math/rand\u0026#34; ) func main() { fmt.Println(\u0026#34;My favorite number is\u0026#34;, rand.Intn(10)) } 說明 #package main Golang 開發規範中， package main 這一句宣告語句須放在第一行，代表當前的檔案屬於 main package。\npackage 是一種組成程式碼的方式，把相關的函式、變數和資源組織在一起，以保持程式碼的整潔。\n你可以想像成一個資料夾，裡面放著許多相關的檔案。\nimport ( \u0026#34;fmt\u0026#34; \u0026#34;math/rand\u0026#34; ) 目前的程式中引用了 packages fmt 與 math/rand。\nfmt 是一個內建的 package，在這裡我們用來印出指定的文字。\nmath/rand 是另一個內建的 package，提供隨機數字的產生器，這裡我們用來產生 0 到 10 的隨機數字。\n我們可以將 import 的 packages 放在一起，這樣可以讓程式碼更簡潔。\nimport ( \u0026#34;fmt\u0026#34; \u0026#34;math/rand\u0026#34; ) 你也可以將它們分開來\nimport \u0026#34;fmt\u0026#34; import \u0026#34;math/rand\u0026#34; func main() { fmt.Println(\u0026#34;My favorite number is\u0026#34;, rand.Intn(10)) } func main() 是目前這個程式的主函式，這是程式的進入點。意即執行該檔案時，會預設執行這個函式中的程式碼。\nfmt.Println(\u0026quot;My favorite number is\u0026quot;, rand.Intn(10)) 是用來印出文字的指令，這裡我們印出了隨機數字的文句。 rand.Intn(10) 是產生隨機 1 到 10 的整數。\n小結 #冒險者們！幹得不錯，你已經通過了第一項考驗了！相信你已經開始熟悉 Golang 程式碼區塊是怎麼分佈的了，是不是已經隱隱約約知道怎麼操控 Golang 之力了呢？ 想要細細品味其中原理，那就往下一個任務前進吧！\n","date":"18 4月 2025","permalink":"/posts/golang/golang-%E6%96%B0%E6%89%8B%E6%9D%911/","section":"Posts","summary":"","title":"Golang 新手村(1) - Golang 基本語法"},{"content":"Introduction #This is bold text, and this is emphasized text.\nVisit the Hugo website!\n","date":"11 4月 2025","permalink":"/posts/my-first-post/","section":"Posts","summary":"","title":"My First Post"}]